#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import os
import sys
import agent
import subprocess

rdb = agent.redis_connect() # full read-only access on every key
modules=[]
accepted_timezone_list = []
list_of_timezone_widget = []

# we query about all mail server to use it inside the user interface
for key in agent.list_service_providers(rdb,'imap','tcp'):
    modules.append({
        "name": key['module_id'],
        "label": key['mail_hostname'],
        "value": key['module_id'],
    })
# we query about all known timezone and we build a widget
accepted_timezone_list = subprocess.check_output(['podman', 'run', '--rm', os.environ["WEBTOP_WEBAPP_IMAGE"], 'java', '-classpath', '/usr/share/webtop/', 'ListTimeZones'], text=True).splitlines()

for value in accepted_timezone_list:
    list_of_timezone_widget.append({
        "name": value,
        "label": value,
        "value": value,
    })

config={
        "hostname": os.getenv("WEBTOP_HOSTNAME", ""),
        "request_https_certificate": os.environ["WEBTOP_REQUEST_HTTPS_CERTIFICATE"].lower() in ('true', '1', 't'),
        "locale": os.environ["WEBTOP_LOCALE"],
        "timezone": os.environ["WEBTOP_TIMEZONE"],
        "mail_module": os.getenv("MAIL_MODULE", ""),
        "webapp": {
            "debug": os.environ["WEBAPP_JS_DEBUG"].lower() in ('true', '1', 't'),
            "min_memory": int(os.environ["WEBAPP_MIN_MEMORY"]),
            "max_memory": int(os.environ["WEBAPP_MAX_MEMORY"]),
            },
        "webdav": {
            "debug": os.environ["WEBDAV_DEBUG"].lower() in ('true', '1', 't'),
            "loglevel": os.environ["WEBDAV_LOG_LEVEL"],
            },
        "zpush": {
            "loglevel": os.environ["Z_PUSH_LOG_LEVEL"],
            },
        "mail_module_widget": modules,
        "accepted_timezone_list": list_of_timezone_widget
        }

json.dump(config, fp=sys.stdout)
